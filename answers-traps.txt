Q: Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?

A: a0, a1, a2. a2 holds 13.


Q: Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)

A: No call for function f and g, the compiler may inline functions.


Q: At what address is the function printf located?

A: 630.(jalr	1536(ra) # 630 <printf>)


Q: What value is in the register ra just after the jalr to printf in main?

A: 0x38, "auipc ra,0x0" makes ra become pc(30), "jalr 1536(ra)" makes pc become ra+1536 and ra become pc+4(38).


Q: Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
      
What is the output? Here's an ASCII table that maps bytes to characters.
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?

A: He110 World. i will become 0x726c6400. 57616 will not change.


Q: In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

	printf("x=%d y=%d", 3);

A: Not a specific number, depends on a2 register.